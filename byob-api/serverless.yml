service: okta-byob-api

frameworkVersion: ">=1.1.0 <2.0.0"

plugins:
  # - serverless-offline-ssm
  - serverless-offline

custom:
  env: ${file(./.env.json)}
  region: ${self:provider.region}
  stage: ${self:provider.stage}
  ssmPrefix: byob # This should match what's in /terraform/terraform.tfvars
  ssmParameters:
    OKTA_ISSUER: "/${self:custom.ssmPrefix}/okta/${self:custom.stage}/issuer-uri"
    OKTA_AUDIENCE: "/${self:custom.ssmPrefix}/okta/${self:custom.stage}/audience"
    OKTA_CLIENT_ID: "/${self:custom.ssmPrefix}/okta/${self:custom.stage}/client-id"
    OKTA_API_TOKEN: "/${self:custom.ssmPrefix}/okta/${self:custom.stage}/api-token"
    RECAPTCHA_SITE_SECRET: "/${self:custom.ssmPrefix}/okta/${self:custom.stage}/recaptcha-site-secret"

outputs:

provider:
  name: aws
  runtime: nodejs10.x
  profile: ${self:custom.env.AWS_PROFILE} # This should match what's in /terraform/terraform.tfvars
  region: ${self:custom.env.AWS_REGION}   # This should match what's in /terraform/terraform.tfvars
  stage: ${self:custom.env.ENVIRONMENT}   # This should match what's in /terraform/terraform.tfvars
  environment:
    # Set the SSM Parameter directly as an environment variable
    ISSUER: ${ssm:${self:custom.ssmParameters.OKTA_ISSUER}}
    AUDIENCE: ${ssm:${self:custom.ssmParameters.OKTA_AUDIENCE}}
    OKTA_CLIENT_ID: ${ssm:${self:custom.ssmParameters.OKTA_CLIENT_ID}}

    #To-Do: Set SecureString parameter name in environment variable, not the actual value.
    OKTA_API_KEY: ${ssm:${self:custom.ssmParameters.OKTA_API_TOKEN}~true}
    RECAPTCHA_SITE_SECRET: ${ssm:${self:custom.ssmParameters.RECAPTCHA_SITE_SECRET}~true}

  # To-Do: IAM Policy to Read SSM Parameters
  # iamRoleStatementsInherit: true
  # iamRoleStatements:
  #   - Effect: Allow
  #     Action:
  #       - ssm:GetParameters
  #     Resource: "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/${self:custom.ssmPrefix}/okta/${self:custom.stage}/*"

functions:
  oktaAuth:
    handler: authorizer/handler.auth
    cors: true

  register:
    handler: registration/register.handler
    events:
      - http:
          path: /register
          method: POST
          cors: true

  proxy:
    handler: proxy/okta.handler
    events:
      - http:
          path: /api/v1/{proxy+}
          method: ANY
          cors: true
          authorizer:
            name: oktaAuth
            identityValidationExpression: ^Bearer [-0-9a-zA-z\.]*$
            resultTtlInSeconds: 0
resources:
  Outputs:
    ApiUrl:
      Description: "The API Gateway URL"
      Value:
        Fn::Join:
          - ""
          - - "https://"
            - Ref: ApiGatewayRestApi
            - ".execute-api.${self:custom.region}.amazonaws.com/${self:custom.stage}"
